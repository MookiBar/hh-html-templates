
    <script>
        //creates deviceLat and deviceLong as value 0 to prevent issues.
        var deviceLat = 0;
        var deviceLong = 0;

        //within this script tag is a function to ask the user for permission to use device location. If user says yes, we store lat and long in localStorage. This data persists even after a browser is closed.
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {

                deviceLat = position.coords.latitude;
                deviceLong = position.coords.longitude;
                window.localStorage.setItem('storedLati', deviceLat);
                window.localStorage.setItem('storedLongi', deviceLong);

            }, function () {
                //handle location error (i.e. if user disallowed location access manually)

                //The intent is for me to put something in here to request an alternate way to get location if the user decides not to allow device location
                //This is intentionally left blank becuase I'm not done with zip code localization yet.

            });
        } else {
            // Browser doesn't support Geolocation

            //The intent is for me to put something similar as above in here.
        }

    </script>

    <!-- The following code reads the local storage and prints it out. Feel free to delete the print lines and make the code do other things. -->
    <script>
        let readLatitude = localStorage.getItem('storedLati');
        document.write(readLatitude);
    </script>
    <br />
    <script>
        let readLongitude = localStorage.getItem('storedLongi');
        document.write(readLongitude);
    </script>


    <!-- The following code reads the localStorage values for lat, long, and range willing to be walked. Then it spits out a North East South West bound based on a formula -->

    <script>
        deviceLat = localStorage.getItem('storedLati');
        deviceLong = localStorage.getItem('storedLongi');

        var miles = localStorage.getItem('storedRange');

        //Note to self. Lat goes up, point goes north
        //long goes up, poing goes east.
        var north = 0;
        var east = 0;
        var south = 0;
        var west = 0;

        // one 69th of a degree is about equal to a mile.
        var north = (deviceLat - (0 - ((1 / 69) * miles)));
        var south = (deviceLat - ((1 / 69) * miles));
        var east = (deviceLong - (0 - ((1 / 69) * miles)));
        var west = (deviceLong - ((1 / 69) * miles));

        //this output is solely for debugging and testing. Feel free to modify this for a backend algorithm
        document.write("Any coordinate is ~within " + miles + " miles of the user as long as the lat is between: " + south + " and " + north + " and the long is between " + west + " and " + east + ".");
    </script>
